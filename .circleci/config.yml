version: 2.1

# commands:
#   destroy-environment:
#     description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
#     parameters:
#       # Add parameter here   
#     steps:
#       - run:
#           name: Destroy environments
#           when: on_fail
          # command: |
          #   # Your code here
          #   exit 1



jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [build-frontend]
      - run:
          name: Build front-end.
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build


  build-backend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
           keys: [backend-build]
        - run:
           name: Back-end build
           command: |
             cd backend
             npm install
             npm run build
        - save_cache:
            paths: [backend/node_modules]
            key: backend-build

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
           keys: [frontend-test]
      - run:
          name: test-frontend
          command: |
            cd frontend
            npm install
            npm run test
        
        
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
           keys: [backend-test]
      - run:
          name: test-backend
          command: |
            cd backend
            npm install
            npm run test
  
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
           keys: [scan-frontend]
      - run:
          name: scan-frontend
          command: |
           cd frontend
           npm install
           npm audit fix --audit-level=critical --force
           npm audit --audit-level=critical


  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
           keys: [scan-backend]
      - run:
          name: scan-backend
          command: |
           cd backend
           npm install
           npm audit fix --audit-level=critical --force
           npm audit fix --force
           npm audit --audit-level=critical


workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend: 
          requires: [test-frontend]
      - scan-backend: 
          requires: [test-backend]
           
     